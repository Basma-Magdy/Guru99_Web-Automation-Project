<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-09T13:52:09 GMT" name="Suite" finished-at="2024-12-09T13:52:15 GMT" duration-ms="5828">
    <groups>
      <group name="Regression">
        <method signature="LoginTests.TC01_ValidScenarioLoginVerification(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginTests@477b4cdf]" name="TC01_ValidScenarioLoginVerification" class="TestCases.LoginTests"/>
        <method signature="LoginTests.TC02_InValidScenariosLoginVerification(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginTests@477b4cdf]" name="TC02_InValidScenariosLoginVerification" class="TestCases.LoginTests"/>
      </group> <!-- Regression -->
      <group name="Login">
        <method signature="LoginTests.TC01_ValidScenarioLoginVerification(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginTests@477b4cdf]" name="TC01_ValidScenarioLoginVerification" class="TestCases.LoginTests"/>
        <method signature="LoginTests.TC02_InValidScenariosLoginVerification(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginTests@477b4cdf]" name="TC02_InValidScenariosLoginVerification" class="TestCases.LoginTests"/>
      </group> <!-- Login -->
    </groups>
    <test started-at="2024-12-09T13:52:09 GMT" name="Test" finished-at="2024-12-09T13:52:15 GMT" duration-ms="5828">
      <class name="TestCases.LoginTests">
        <test-method is-config="true" signature="LoginTestsSetup()[pri:0, instance:TestCases.LoginTests@477b4cdf]" started-at="2024-12-09T13:52:11 GMT" name="LoginTestsSetup" finished-at="2024-12-09T13:52:12 GMT" duration-ms="743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestsSetup -->
        <test-method signature="TC01_ValidScenarioLoginVerification(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginTests@477b4cdf]" started-at="2024-12-09T13:52:12 GMT" name="TC01_ValidScenarioLoginVerification" data-provider="ValidLoginData" finished-at="2024-12-09T13:52:13 GMT" duration-ms="636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr602413]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hAnYsAh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_ValidScenarioLoginVerification -->
        <test-method is-config="true" signature="LoginTestsSetup()[pri:0, instance:TestCases.LoginTests@477b4cdf]" started-at="2024-12-09T13:52:13 GMT" name="LoginTestsSetup" finished-at="2024-12-09T13:52:13 GMT" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestsSetup -->
        <test-method signature="TC02_InValidScenariosLoginVerification(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginTests@477b4cdf]" started-at="2024-12-09T13:52:13 GMT" name="TC02_InValidScenariosLoginVerification" data-provider="InValidLoginData" finished-at="2024-12-09T13:52:14 GMT" duration-ms="290" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[xyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zdghfjh]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [User or Password is no valid] but found [User or Password is not valid]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [User or Password is no valid] but found [User or Password is not valid]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Pages.LoginPage.InvalidLoginValidation(LoginPage.java:93)
at TestCases.LoginTests.TC02_InValidScenariosLoginVerification(LoginTests.java:86)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_InValidScenariosLoginVerification -->
      </class> <!-- TestCases.LoginTests -->
      <class name="TestCases.TestCasesPrePostConditions">
        <test-method is-config="true" signature="SetUpTest()[pri:0, instance:TestCases.TestCasesPrePostConditions@7586beff]" started-at="2024-12-09T13:52:09 GMT" name="SetUpTest" finished-at="2024-12-09T13:52:11 GMT" duration-ms="2055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUpTest -->
        <test-method is-config="true" signature="Teardown()[pri:0, instance:TestCases.TestCasesPrePostConditions@7586beff]" started-at="2024-12-09T13:52:14 GMT" name="Teardown" finished-at="2024-12-09T13:52:15 GMT" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Teardown -->
      </class> <!-- TestCases.TestCasesPrePostConditions -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
